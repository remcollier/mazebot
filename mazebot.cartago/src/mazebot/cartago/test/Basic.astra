package mazebot.cartago.test;

agent Basic {
	module Cartago cartago;
	module Console console;
	module System system;
	
	types core {
		formula robot(cartago.ArtifactId);
	}
	
	initial !init();
		
	rule +!init() {
		console.println("++++++++++++++++++++ Started: " + system.name());
		cartago.link();
		cartago.lookupArtifact(system.name(), cartago.ArtifactId id);
		cartago.focus(id);
		+robot(id);
		
		console.println("++++++++++++++++++++ Setting Behaviour: " + system.name());
		cartago.operation(id, setBehaviour("FindWall"));
	}
	
	rule $cartago.signal(string X, FoundWall()) : robot(cartago.ArtifactId id) {
		cartago.operation(id, setBehaviour("FollowWall"));
	}
	
	rule $cartago.signal(string X, LostWall()) : robot(cartago.ArtifactId id) {
		cartago.operation(id, setBehaviour("FindWall"));
	}
	
	rule $cartago.signal(string X, Collision()) : robot(cartago.ArtifactId id) {
		cartago.operation(id, setVelocity(-6.0, 0.0));
	}

}